import pandas as pd
import random
import matplotlib.pyplot as plt
import seaborn as sns
from tabulate import tabulate  # Import the tabulate library

# Generate random data
names = [
    "Muhammad", "Ali", "Ahmad", "Hamza", "Usman", "Hassan", "Hussain", "Bilal",
    "Farhan", "Saad", "Ahsan", "Zain", "Danish", "Imran", "Arsalan", "Shehroz",
    "Qasim", "Sajjad", "Waqas", "Salman", "Haris", "Azhar", "Yasir", "Junaid",
    "Taimoor", "Asad", "Rizwan", "Talha", "Adil", "Nabeel", "Zubair", "Umair",
    "Raheel", "Aamir", "Irfan", "Faisal", "Noman", "Zohaib", "Kamran", "Arif",
    "Kashif", "Khalid", "Azeem", "Babar", "Mansoor", "Wajid", "Tanveer", "Shahid",
    "Rehan", "Azlan", "Ayesha", "Fatima", "Maryam", "Zainab", "Khadija", "Rania",
    "Noor", "Laiba", "Mahira", "Areeba", "Aiza", "Hoorain", "Emaan", "Dua",
    "Haniya", "Haleema", "Zara", "Hooria", "Ameerah", "Areej", "Iqra", "Nimra",
    "Hiba", "Sara", "Maria", "Hina", "Sadia", "Sidra", "Areesha", "Kinza",
    "Mahnoor", "Ayesha"
]

locations = ["Karachi", "Lahore", "Islamabad", "Quetta", "Peshawar", "Faisalabad", "Rawalpindi", "Multan"]
domains = ["gmail.com", "hotmail.com", "outlook.com", "yahoo.com"]
vulnerability_names = [
    "SQL Injection", "Cross-Site Scripting", "Broken Authentication",
    "Security Misconfiguration", "Insecure Deserialization", "Buffer Overflow",
    "Unrestricted File Upload", "Cross-Site Request Forgery", "Insufficient Logging"
]

# Create random user and vulnerability data
data = []
for i in range(100):
    name = random.choice(names)
    email = f"{name.lower()}{random.randint(1, 100)}@{random.choice(domains)}"
    location = random.choice(locations)
    ip_address = f"{random.randint(10, 255)}.{random.randint(0, 255)}.{random.randint(0, 255)}.{random.randint(0, 255)}"
    vulnerability = random.choice(vulnerability_names)
    status = random.choice(["Open", "Resolved"])
    month = random.choice([
        "January", "February", "March", "April", "May", "June",
        "July", "August", "September", "October", "November", "December"
    ])
    data.append({
        "Name": name,
        "Email": email,
        "Location": location,
        "IP Address": ip_address,
        "Vulnerability": vulnerability,
        "Status": status,
        "Month": month
    })

# Convert to DataFrame
df = pd.DataFrame(data)

# Display User Details Table
print("=== User and Vulnerability Details Table ===")
print(tabulate(df, headers='keys', tablefmt='pipe'))  # Use tabulate for formatted output

# === Visualizations ===

# 1. Bar Chart: Monthly Vulnerabilities
monthly_counts = df.groupby(["Month", "Status"]).size().unstack(fill_value=0)
monthly_counts = monthly_counts.reindex([
    "January", "February", "March", "April", "May", "June",
    "July", "August", "September", "October", "November", "December"
])

plt.figure(figsize=(12, 6))
monthly_counts.plot(kind="bar", stacked=True, color=["orange", "blue"])
plt.title("Monthly Vulnerability Counts")
plt.xlabel("Month")
plt.ylabel("Count")
plt.legend(["Open", "Resolved"])
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# 2. Pie Chart: Distribution of Vulnerability Types
vuln_counts = df["Vulnerability"].value_counts()

plt.figure(figsize=(8, 8))
plt.pie(vuln_counts, labels=vuln_counts.index, autopct='%1.1f%%', startangle=140, colors=sns.color_palette("pastel"))
plt.title("Distribution of Vulnerability Types")
plt.tight_layout()
plt.show()

# 3. Line Chart: Trend of Vulnerabilities Over the Year
trend_data = df.groupby(["Month", "Status"]).size().reset_index(name="Count")
trend_pivot = trend_data.pivot(index="Month", columns="Status", values="Count").fillna(0)
trend_pivot = trend_pivot.reindex([
    "January", "February", "March", "April", "May", "June",
    "July", "August", "September", "October", "November", "December"
])

plt.figure(figsize=(12, 6))
plt.plot(trend_pivot.index, trend_pivot["Open"], marker="o", label="Open", color="orange")
plt.plot(trend_pivot.index, trend_pivot["Resolved"], marker="o", label="Resolved", color="blue")
plt.title("Trend of Vulnerabilities Over the Year")
plt.xlabel("Month")
plt.ylabel("Count")
plt.legend()
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()